{"version":3,"file":"static/js/390.6cbdf50f.chunk.js","mappings":"gSAGaA,EAAQC,EAAAA,GAAAA,GAAH,+CAILC,EAAOD,EAAAA,GAAAA,GAAH,kDAIJE,EAAOF,EAAAA,GAAAA,GAAH,yFAMJG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,8G,SCKtB,EAnBmB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,iCACI,SAACR,EAAD,UAAO,oBACP,SAACE,EAAD,UACKI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,SAACR,EAAD,WACI,SAACC,EAAD,CAAWQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA/C,SACKI,KAFED,EADH,QAU3B,ECkBD,EAhCa,WACT,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,oGAEhBF,GAAW,GAFK,UAGWG,EAAAA,EAAAA,MAHX,OAGVC,EAHU,OAIhBR,EAAUQ,GAJM,gDAML,iBAAf,KAAMC,MACRP,EAAS,KAAMQ,SAPO,yBAUhBN,GAAW,GAVK,4EAAH,qDAarBE,GACH,GAAE,KAGC,4BACKH,IAAW,SAACQ,EAAA,EAAD,IACXV,IAAUE,IAAW,yBAAG,UAAQF,MACjC,SAAC,EAAD,CAAYX,OAAQA,MAI/B,C,qLClCKsB,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAIX,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,+GAEwBK,EAASM,IAAT,uBAFxB,uBAESC,EAFT,EAESA,KAFT,kBAGQA,EAAKC,SAHb,2HASA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAaC,GAAxC,kGAEoBX,EAASM,IAAT,8BAAoCI,GAAe,CACxEC,OAAAA,IAHC,uBAEKJ,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,2HAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4B9B,GAA5B,kGAEwBkB,EAASM,IAAT,iBAAuBxB,IAF/C,uBAESyB,EAFT,EAESA,KAFT,kBAGQA,GAHR,2HASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAuB/B,GAAvB,kGAEoBkB,EAASM,IAAT,iBAAuBxB,EAAvB,aAFpB,uBAEKyB,EAFL,EAEKA,KAFL,kBAGIA,EAAKO,MAHT,2HASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BjC,GAA1B,kGAEoBkB,EAASM,IAAT,iBAAuBxB,EAAvB,aAFpB,uBAEKyB,EAFL,EAEKA,KAFL,kBAGIA,EAAKC,SAHT,2H","sources":["components/MoviesListComponent/MoviesList.styled.jsx","components/MoviesListComponent/MoviesList.jsx","components/pages/Homepage.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #111111;\n\n  &:hover {\n    color: #de9c0d;\n  }\n`;","import { useLocation } from \"react-router-dom\";\nimport { List, Item, MovieLink, Title } from './MoviesList.styled'\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            <Title>Trending today</Title>\n            <List>\n                {movies.map(({ id, title }) => (\n                    <Item key={id}>\n                        <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                            {title}\n                        </MovieLink>\n                    </Item>\n                ))}\n            </List>\n        </>\n    )\n}\n\nexport default MoviesList;","import { useState, useEffect } from 'react';\nimport { Loader } from 'components/LoaderComponents/Loader';\nimport { fetchTrendingMovies } from 'services/api';\nimport  MoviesList  from 'components/MoviesListComponent/MoviesList';\n\n\nconst Home = () => {\n    const [movies, setMovies] = useState([])\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchMoviesList = async () => {\n            try {\n                setLoading(true)\n                const fetchedFilms = await fetchTrendingMovies()\n                setMovies(fetchedFilms)\n            } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchMoviesList()\n    }, [])\n    \n    return (\n        <main>\n            {loading && <Loader />}\n            {error && !loading && <p>Error: {error}</p>}\n            <MoviesList movies={movies}/>\n        </main>\n    )\n\n}\n\nexport default Home;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '36aa473dfc5ec81fada547082bc4a5dd',\n        language: 'en-US',\n    },\n});\n\nexport async function fetchTrendingMovies() {\n    try {\n        const { data } = await instance.get(`/trending/movie/day`)\n        return data.results;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function searchMovie(queryString, signal) {\n  try {\n    const { data } = await instance.get(`/search/movie?query=${queryString}`, {\n      signal,\n    });\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\n\n\nexport async function getMovieById(id) {\n    try {\n        const { data } = await instance.get(`/movie/${id}`)\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getCast(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}"],"names":["Title","styled","List","Item","MovieLink","Link","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchMoviesList","fetchTrendingMovies","fetchedFilms","code","message","Loader","instance","axios","baseURL","params","api_key","language","get","data","results","searchMovie","queryString","signal","getMovieById","getCast","cast","getReviews"],"sourceRoot":""}