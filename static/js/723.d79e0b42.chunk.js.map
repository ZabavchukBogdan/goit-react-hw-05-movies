{"version":3,"file":"static/js/723.d79e0b42.chunk.js","mappings":"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","sources":["components/MoviesPageComponents/MoviesPageCom.styled.jsx","components/MoviesPageComponents/MoviesPageCom.jsx","components/SearchMoviesComponent/SearchMovie.styled.jsx","components/SearchMoviesComponent/SearchMovie.jsx","components/pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 34px;\n`;\n\nexport const Input = styled.input`\n  margin-right: 10px;\n  padding: 5px;\n\n  font-size: 16px;\n\n  background-color: transparent;\n  border: 2px solid black;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n\n  font-weight: 600;\n  font-size: 16px;\n\n  background-color: #f55c4e;\n  border: 2px solid black;\n  border-radius: 5px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #de9c0d;\n  }\n`;\n\nexport const TextMessage = styled.p`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  font-size: 26px;\n`;","import { Title, Input, Button } from './MoviesPageCom.styled';\n\nconst MoviesPageCom = ({ handleSubmit, query, handleChange }) => {\n    return (\n        <div>\n            <Title>Search Movies:</Title>\n            <form onSubmit={handleSubmit}>\n                <Input \n                    value={query}\n                    onChange={handleChange}\n                    name=\"searchQuery\"\n                    text=\"text\"\n                    placeholder=\"Enter movie title\"\n                />\n                <Button type=\"submit\">Search movie</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default MoviesPageCom;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #111111;\n\n  &:hover {\n    color: #de9c0d;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink, Title } from './SearchMovie.styled';\n\nconst SearchMovies = ({ movies, searchQuery }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Title>Movies for your request: \"{searchQuery}\"</Title>\n      <List>\n        {movies.map(({ id, title }) => (\n          <Item key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default SearchMovies;","import { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Loader } from 'components/LoaderComponents/Loader';\n\nimport { searchMovie } from 'services/api';\nimport MoviesPageCom from 'components/MoviesPageComponents/MoviesPageCom';\nimport SearchMovies from 'components/SearchMoviesComponent/SearchMovie';\nimport { TextMessage } from 'components/MoviesPageComponents/MoviesPageCom.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  const [query, setQuery] = useState(() => searchQuery || '');\n\n  const abortCtrl = useRef();\n\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setLoading(true);\n\n        const fetchedSearchedMovies = await searchMovie(\n          searchQuery,\n          abortCtrl.current.signal\n        );\n\n        setMovies(fetchedSearchedMovies);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (searchQuery) {\n      fetchMovies();\n    }\n  }, [searchQuery]);\n \n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query === '') {\n      alert('Please enter some title to search ');\n      return;\n    }\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <MoviesPageCom\n        handleSubmit={handleSubmit}\n        query={query}\n        handleChange={handleChange}\n      ></MoviesPageCom>\n\n      {loading && <Loader />}\n      {error && !loading && <TextMessage>Error: {error}</TextMessage>}\n\n      {movies.length !== 0 && (\n        <SearchMovies movies={movies} searchQuery={searchQuery} />\n      )}\n     \n      {!error && !loading && searchQuery && movies.length === 0 && (\n        <TextMessage>No movies found with this title</TextMessage>\n      )}\n    </>\n  );\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '36aa473dfc5ec81fada547082bc4a5dd',\n        language: 'en-US',\n    },\n});\n\nexport async function fetchTrendingMovies() {\n    try {\n        const { data } = await instance.get(`/trending/movie/day`)\n        return data.results;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function searchMovie(queryString, signal) {\n  try {\n    const { data } = await instance.get(`/search/movie?query=${queryString}`, {\n      signal,\n    });\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\n\n\nexport async function getMovieById(id) {\n    try {\n        const { data } = await instance.get(`/movie/${id}`)\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getCast(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}"],"names":["Title","styled","Input","Button","TextMessage","handleSubmit","query","handleChange","onSubmit","value","onChange","name","text","placeholder","type","List","Item","MovieLink","Link","movies","searchQuery","location","useLocation","map","id","title","to","state","from","useState","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","setQuery","abortCtrl","useRef","useEffect","fetchMovies","current","abort","AbortController","searchMovie","signal","fetchedSearchedMovies","code","message","event","preventDefault","alert","target","Loader","length","SearchMovie","instance","axios","baseURL","params","api_key","language","fetchTrendingMovies","data","results","queryString","getMovieById","getCast","cast","getReviews"],"sourceRoot":""}